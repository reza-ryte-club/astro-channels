<html>
	<head>
		<title>Assignment</title>
		<script src="https://code.jquery.com/jquery-2.1.4.min.js"></script>
		<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.3/angular.min.js"></script>
		<script src="js/angular-tablesort/js/angular-tablesort.js"></script>
		<link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet">
		<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
		<link href="js/angular-tablesort/tablesort.css" rel="stylesheet">
		<link href="/js/sweetalert2/dist/sweetalert2.min.css" rel="stylesheet">
		
	</head>

	<body ng-app="BlankApp" ng-cloak ng-controller="AppCtrl">
		<nav class="navbar navbar-default">
  			<div class="container-fluid">
    		<!-- Brand and toggle get grouped for better mobile display -->
    		<div class="navbar-header">
      			<button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1" aria-expanded="false">
        			<span class="sr-only">Toggle navigation</span>
        			<span class="icon-bar"></span>
        			<span class="icon-bar"></span>
        			<span class="icon-bar"></span>
      			</button>
      			<a class="navbar-brand" href="#">Astro Channels</a>
    			</div>

    			<!-- Collect the nav links, forms, and other content for toggling -->
    			<div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">      
      				<ul class="nav navbar-nav navbar-right">
        				<li><a href="/logout">Logout</a></li>
      				</ul>
    			</div><!-- /.navbar-collapse -->
  			</div><!-- /.container-fluid -->
		</nav>
		<script>
  			window.fbAsyncInit = function() {
          FB.init({
          appId      : '212910835870244',
          cookie     : true,
          xfbml      : true,
          version    : 'v2.8'
        });
        FB.AppEvents.logPageView();   
        };

        (function(d, s, id){
          var js, fjs = d.getElementsByTagName(s)[0];
          if (d.getElementById(id)) {return;}
          js = d.createElement(s); js.id = id;
          js.src = "//connect.facebook.net/en_US/sdk.js";
          fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));
		</script>	           
  <div ng-show="channels" ng-model="$scope.channels">
  <section class='table-responsive' style='margin:15px auto;'>
      <table class="table table-bordered" border="1">
      <thead>
      <tr>
      <th class="sortable-channel" ng-click="setOrder([1,0,0])">
          Channel Number 
          <span class="glyphicon glyphicon-sort" aria-hidden="true"></span>
        </th>
        <th class="sortable-channel" ng-click="setOrder([0,1,0])">
        Channel Title
          <span class="glyphicon glyphicon-sort" aria-hidden="true"></span>
        </th>
        <th class="sortable-channel" ng-click="setOrder([0,0,1])">
        Make it Favorite
        <span class="glyphicon glyphicon-sort" aria-hidden="true"></span>
        </th>
      </tr>
      </thead>
      <tbody>
        <tr ng-repeat="channel in channels" ng-show="channel">
          <td>{{channel.channelStbNumber}}</td>
          <td ng-click="showInformation(channel)">{{channel.channelTitle}}</td>
          <td ng-if="!channel.favorite"><button ng-click="makeFav(channel)">Make it favorite</button></td>
          <td ng-if="channel.favorite"><button ng-click="removeFav(channel)">Remove from favorite</button></td>
        </tr>
      </tbody>
    </table>
    </section>
  </div>

  <script src="/js/jquery.js"></script>
  <script>
	angular.module('BlankApp',['tableSort']).controller('AppCtrl', function ($scope, $http, $window) {

      $scope.mychannels = [];
      $scope.myorder = [1,0,0];

		  $http.get('/all-channels').then(function(response) {
		  	$scope.allchannels = response.data.channels;
		  }).then(function(){
          $http.get('/my-channels').then(function(resp){ 
          resp.data.forEach(function(ch) {
            $scope.mychannels.push(ch.channelId);
          });
        }).then(function(){
        $scope.allchannels.forEach(function(allchannel) {
          $scope.mychannels.forEach(function(mc){
            if(allchannel.channelId==mc) {
              allchannel.favorite = true;
            }
          });
          if(!allchannel.favorite) allchannel.favorite = false;
        });
        // $scope.channels = $scope.allchannels;
        $http.get('/my-order').then(function(orders){ 
          
          console.log('orders');
          if(orders)
            if(orders.data[0])
              $scope.myorder = orders.data[0].seq;
          
          console.log($scope.myorder);
          setChannels(orders);
        });
      })
      });

		    $scope.makeFav = function(channel) {
    		  if(!channel.favorite)
      			channel.favorite = true;
            var channelData = {
              channelId: channel.channelId
            };
            $http.post('/channel', channelData).then(function(res){
              console.log(res);
            });
  		  }
  		  $scope.removeFav = function(channel) {
    		if(channel.favorite)
      			channel.favorite = false;
            var deleteURL = '/channel/'+channel.channelId;
            $http.delete(deleteURL).then(function(res){
              console.log(res);
            }); 
  		  }

        $scope.setOrder = function(sorder){
          if(sorder[0]==1) 
            sorder = $scope.myorder[0]==1?[-1,0,0]:[1,0,0];
          if(sorder[1]==1) 
            sorder = $scope.myorder[1]==1?[0,-1,0]:[0,1,0];
          if(sorder[2]==1) 
            sorder = $scope.myorder[2]==1?[0,0,-1]:[0,0,1];
          
          $scope.myorder = sorder;
          setChannels(sorder);
          console.log("myorder");
          console.log($scope.myorder);
          var orderData = {
            seq: sorder
          };
          $http.delete('/sorder').then(function(res){
              console.log(res);
          }).then(function(){
              $http.post('/sorder', orderData).then(function(res){
              console.log(res);
            });
          });

        }

        function setChannels(orders){
          console.log('setting up');
          console.log('one2');
          if($scope.myorder[0]==-1) {
            $scope.sortedOne = $scope.allchannels.sort(dynamicSort("channelStbNumber"));
            $scope.reversedAllChannels = [];
            for(var i=$scope.allchannels.length-1;i>=0;i--) $scope.reversedAllChannels.push($scope.sortedOne[i]);
            $scope.channels = $scope.reversedAllChannels;
            console.log($scope.channels);
          } 

          if($scope.myorder[0]==1) {
            console.log('1.2');
            $scope.sortedOne = $scope.allchannels.sort(dynamicSort("channelStbNumber"));
            $scope.channels = $scope.sortedOne;
          } 
          
          if($scope.myorder[1]==-1) {
            $scope.sortedOne = $scope.allchannels.sort(dynamicSort("channelTitle"));
            $scope.reversedAllChannels = [];
            for(var i=$scope.allchannels.length-1;i>=0;i--) $scope.reversedAllChannels.push($scope.sortedOne[i]);
            $scope.channels = $scope.reversedAllChannels;
          console.log('2.1');
          } 

          if($scope.myorder[1]==1) {
            $scope.sortedOne = $scope.allchannels.sort(dynamicSort("channelTitle"));
            $scope.channels = $scope.sortedOne;
            console.log('2.2');
          } 

          if($scope.myorder[2]==1) {
            $scope.sortedOne = $scope.allchannels.sort(dynamicSort("favorite"));
            $scope.reversedAllChannels = [];
            for(var i=$scope.allchannels.length-1;i>=0;i--) $scope.reversedAllChannels.push($scope.sortedOne[i]);
            $scope.channels = $scope.reversedAllChannels;
          console.log('3.1');
          } 

          if($scope.myorder[2]==-1) {
             $scope.sortedOne = $scope.allchannels.sort(dynamicSort("favorite"));
            $scope.channels = $scope.sortedOne;
            console.log('3.2');
          } 
          
          // $scope.channels = $scope.allchannels;
          console.log('two2'); 
        }
        
        function dynamicSort(property) {
          var sortOrder = 1;
          if(property[0] === "-") {
            sortOrder = -1;
            property = property.substr(1);
          }
          return function (a,b) {
            var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;
            return result * sortOrder;
          }
        }
	});
	</script>
			<script src="js/sweetalert2/dist/sweetalert2.min.js"></script>

  </body>
</html>